salesforce.Flow Create_property {
  fullName = "Create_property"
  actionCalls = {
    name = "geocode_address"
    label = "Geocode Address"
    locationX = 666
    locationY = 398
    actionName = salesforce.ApexClass.instance.GeocodingService
    actionType = "apex"
    connector = {
      targetReference = "property_details"
    }
    faultConnector = {
      targetReference = "Error5"
    }
    flowTransactionModel = "CurrentTransaction"
    inputParameters = [
      {
        name = "city"
        value = {
          elementReference = "property_address.city"
        }
      },
      {
        name = "country"
        value = {
          elementReference = "property_address.country"
        }
      },
      {
        name = "postalcode"
        value = {
          elementReference = "property_address.postalCode"
        }
      },
      {
        name = "state"
        value = {
          elementReference = "property_address.province"
        }
      },
      {
        name = "street"
        value = {
          elementReference = "property_address.street"
        }
      },
    ]
    storeOutputAutomatically = true
  }
  apiVersion = 51
  decisions = [
    {
      name = "If_content_document_found"
      label = "If Content Document found"
      locationX = 666
      locationY = 998
      defaultConnector = {
        targetReference = "navigate_to_record_detail"
      }
      defaultConnectorLabel = "Default Outcome"
      rules = [
        {
          name = "Content_Document_Link_found"
          conditionLogic = "and"
          conditions = [
            {
              leftValueReference = "get_main_content_document"
              operator = "IsNull"
              rightValue = {
                booleanValue = false
              }
            },
          ]
          connector = {
            targetReference = "get_main_content_version"
          }
          label = "Content Document Found"
        },
      ]
    },
    {
      name = "if_content_version_found"
      label = "If Content Version found"
      locationX = 314
      locationY = 1238
      defaultConnector = {
        targetReference = "navigate_to_record_detail"
      }
      defaultConnectorLabel = "Default Outcome"
      rules = [
        {
          name = "picture_found"
          conditionLogic = "and"
          conditions = [
            {
              leftValueReference = "get_main_content_version"
              operator = "IsNull"
              rightValue = {
                booleanValue = false
              }
            },
          ]
          connector = {
            targetReference = "set_main_picture"
          }
          label = "Picture Found"
        },
      ]
    },
  ]
  description = "This flow helps agents creating new properties in just a few clicks. It calculates the geocoded address calling out to a 3rd party service."
  formulas = [
    {
      description = "Main picture URL that we'll use as thumbnail"
      name = "main_picture_url"
      dataType = "String"
      expression = "\"/sfc/servlet.shepherd/version/download/\" + {!get_main_content_version.Id}"
    },
  ]
  interviewLabel = "Create Property {!$Flow.CurrentDateTime}"
  label = "Create Property"
  processMetadataValues = [
    {
      name = "BuilderType"
      value = {
        stringValue = "LightningFlowBuilder"
      }
    },
    {
      name = "CanvasMode"
      value = {
        stringValue = "AUTO_LAYOUT_CANVAS"
      }
    },
    {
      name = "OriginBuilderType"
      value = {
        stringValue = "LightningFlowBuilder"
      }
    },
  ]
  processType = "Flow"
  recordCreates = [
    {
      name = "create_property"
      label = "Create Property"
      locationX = 666
      locationY = 638
      connector = {
        targetReference = "upload_picture"
      }
      faultConnector = {
        targetReference = "error_creating_records"
      }
      inputAssignments = [
        {
          field = salesforce.Property__c.field.Address__c
          value = {
            elementReference = "property_address.street"
          }
        },
        {
          field = salesforce.Property__c.field.Baths__c
          value = {
            elementReference = "number_of_baths"
          }
        },
        {
          field = salesforce.Property__c.field.Beds__c
          value = {
            elementReference = "number_of_beds"
          }
        },
        {
          field = salesforce.Property__c.field.Broker__c
          value = {
            elementReference = "property_broker.recordId"
          }
        },
        {
          field = salesforce.Property__c.field.City__c
          value = {
            elementReference = "property_address.city"
          }
        },
        {
          field = salesforce.Property__c.field.Date_Listed__c
          value = {
            elementReference = "$Flow.CurrentDate"
          }
        },
        {
          field = salesforce.Property__c.field.Description__c
          value = {
            elementReference = "property_description"
          }
        },
        {
          field = "Location__Latitude__s"
          value = {
            elementReference = "geocode_address.lat"
          }
        },
        {
          field = "Location__Longitude__s"
          value = {
            elementReference = "geocode_address.lon"
          }
        },
        {
          field = salesforce.Property__c.field.Name
          value = {
            elementReference = "property_name"
          }
        },
        {
          field = salesforce.Property__c.field.Price__c
          value = {
            elementReference = "property_price"
          }
        },
        {
          field = salesforce.Property__c.field.State__c
          value = {
            elementReference = "property_address.province"
          }
        },
        {
          field = salesforce.Property__c.field.Status__c
          value = {
            stringValue = "Available"
          }
        },
        {
          field = salesforce.Property__c.field.Tags__c
          value = {
            elementReference = "property_tags"
          }
        },
        {
          field = salesforce.Property__c.field.Zip__c
          value = {
            elementReference = "property_address.postalCode"
          }
        },
      ]
      object = salesforce.Property__c
      storeOutputAutomatically = true
    },
  ]
  recordLookups = [
    {
      description = "Retrieve just one of the pictures to be the main one"
      name = "get_main_content_document"
      label = "Get Main Content Document"
      locationX = 666
      locationY = 878
      assignNullValuesIfNoRecordsFound = false
      connector = {
        targetReference = "If_content_document_found"
      }
      faultConnector = {
        targetReference = "Error2"
      }
      filterLogic = "and"
      filters = [
        {
          field = "LinkedEntityId"
          operator = "EqualTo"
          value = {
            elementReference = "create_property"
          }
        },
      ]
      getFirstRecordOnly = true
      object = "ContentDocumentLink"
      storeOutputAutomatically = true
    },
    {
      name = "get_main_content_version"
      label = "Get Main Content Version"
      locationX = 314
      locationY = 1118
      assignNullValuesIfNoRecordsFound = false
      connector = {
        targetReference = "if_content_version_found"
      }
      faultConnector = {
        targetReference = "Error3"
      }
      filterLogic = "and"
      filters = [
        {
          field = salesforce.ContentVersion.field.ContentDocumentId
          operator = "EqualTo"
          value = {
            elementReference = "get_main_content_document.ContentDocumentId"
          }
        },
        {
          field = salesforce.ContentVersion.field.IsLatest
          operator = "EqualTo"
          value = {
            booleanValue = true
          }
        },
      ]
      getFirstRecordOnly = true
      object = salesforce.ContentVersion
      storeOutputAutomatically = true
    },
  ]
  recordUpdates = [
    {
      name = "set_main_picture"
      label = "Set Property Main Picture & Thumbnail"
      locationX = 50
      locationY = 1358
      connector = {
        targetReference = "navigate_to_record_detail"
      }
      faultConnector = {
        targetReference = "Error4"
      }
      filterLogic = "and"
      filters = [
        {
          field = salesforce.Property__c.field.Id
          operator = "EqualTo"
          value = {
            elementReference = "create_property"
          }
        },
      ]
      inputAssignments = [
        {
          field = salesforce.Property__c.field.Picture__c
          value = {
            elementReference = "main_picture_url"
          }
        },
        {
          field = salesforce.Property__c.field.Thumbnail__c
          value = {
            elementReference = "main_picture_url"
          }
        },
      ]
      object = salesforce.Property__c
    },
  ]
  screens = [
    {
      name = "address"
      label = "Address"
      locationX = 666
      locationY = 278
      allowBack = true
      allowFinish = true
      allowPause = true
      connector = {
        targetReference = "geocode_address"
      }
      fields = [
        {
          name = "property_address"
          extensionName = "flowruntime:address"
          fieldType = "ComponentInstance"
          inputsOnNextNavToAssocScrn = "UseStoredValues"
          isRequired = true
          storeOutputAutomatically = true
        },
      ]
      showFooter = true
      showHeader = true
    },
    {
      name = "Error2"
      label = "Error"
      locationX = 1194
      locationY = 998
      allowBack = true
      allowFinish = true
      allowPause = true
      fields = [
        {
          name = "error2_text"
          fieldText = "<p>Unknown error retrieving uploaded picture.</p>"
          fieldType = "DisplayText"
        },
      ]
      showFooter = true
      showHeader = true
    },
    {
      name = "Error3"
      label = "Error"
      locationX = 754
      locationY = 1238
      allowBack = true
      allowFinish = true
      allowPause = true
      fields = [
        {
          name = "error3_text"
          fieldText = "<p><span style=\"background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);\">Unknown error retrieving uploaded picture.</span></p>"
          fieldType = "DisplayText"
        },
      ]
      showFooter = true
      showHeader = true
    },
    {
      name = "Error4"
      label = "Error"
      locationX = 314
      locationY = 1478
      allowBack = false
      allowFinish = true
      allowPause = true
      fields = [
        {
          name = "error4_text"
          fieldText = "<p><span style=\"background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);\">Unknown error setting picture as Property thumbnail.</span></p>"
          fieldType = "DisplayText"
        },
      ]
      showFooter = true
      showHeader = true
    },
    {
      name = "Error5"
      label = "Error"
      locationX = 1722
      locationY = 518
      allowBack = true
      allowFinish = true
      allowPause = true
      fields = [
        {
          name = "error5_text"
          fieldText = "<p>Error retrieving geocoded address.</p>"
          fieldType = "DisplayText"
        },
      ]
      showFooter = true
      showHeader = true
    },
    {
      name = "error_creating_records"
      label = "Error"
      locationX = 1458
      locationY = 758
      allowBack = false
      allowFinish = true
      allowPause = true
      fields = [
        {
          name = "error"
          fieldText = "<p>Error creating records. Try again.</p>"
          fieldType = "DisplayText"
        },
      ]
      showFooter = true
      showHeader = true
    },
    {
      name = "navigate_to_record_detail"
      label = "Navigate to Record"
      locationX = 666
      locationY = 1934
      allowBack = false
      allowFinish = true
      allowPause = true
      fields = [
        {
          name = "navigate_to_record_lwc"
          extensionName = "c:navigateToRecord"
          fieldType = "ComponentInstance"
          inputParameters = [
            {
              name = "recordId"
              value = {
                elementReference = "create_property"
              }
            },
          ]
          inputsOnNextNavToAssocScrn = "UseStoredValues"
          isRequired = true
          storeOutputAutomatically = true
        },
      ]
      showFooter = true
      showHeader = true
    },
    {
      name = "new_property"
      label = "New Property"
      locationX = 666
      locationY = 158
      allowBack = true
      allowFinish = true
      allowPause = true
      connector = {
        targetReference = "address"
      }
      fields = [
        {
          name = "property_name"
          dataType = "String"
          fieldText = "Property Name"
          fieldType = "InputField"
          isRequired = true
        },
        {
          name = "property_description"
          dataType = "String"
          fieldText = "Description"
          fieldType = "InputField"
          isRequired = false
        },
        {
          name = "property_broker"
          extensionName = "flowruntime:lookup"
          fieldType = "ComponentInstance"
          inputParameters = [
            {
              name = "fieldApiName"
              value = {
                stringValue = "Broker__c"
              }
            },
            {
              name = "label"
              value = {
                stringValue = "Broker"
              }
            },
            {
              name = "objectApiName"
              value = {
                stringValue = "Property__c"
              }
            },
          ]
          inputsOnNextNavToAssocScrn = "UseStoredValues"
          isRequired = true
          storeOutputAutomatically = true
        },
        {
          name = "property_price"
          dataType = "Currency"
          defaultValue = {
            numberValue = 100000
          }
          fieldText = "Price"
          fieldType = "InputField"
          isRequired = true
          scale = 0
        },
      ]
      showFooter = true
      showHeader = true
    },
    {
      name = "property_details"
      label = "Property Details"
      locationX = 666
      locationY = 518
      allowBack = true
      allowFinish = true
      allowPause = true
      connector = {
        targetReference = "create_property"
      }
      fields = [
        {
          name = "number_of_beds"
          dataType = "Number"
          defaultValue = {
            numberValue = 4
          }
          fieldText = "Number of Bedrooms"
          fieldType = "InputField"
          isRequired = false
          scale = 0
        },
        {
          name = "number_of_baths"
          dataType = "Number"
          defaultValue = {
            numberValue = 2
          }
          fieldText = "Number of Bathrooms"
          fieldType = "InputField"
          isRequired = false
          scale = 0
        },
        {
          name = "property_tags"
          dataType = "String"
          fieldText = "Tags"
          fieldType = "InputField"
          isRequired = false
        },
      ]
      showFooter = true
      showHeader = true
    },
    {
      name = "upload_picture"
      label = "Upload Picture"
      locationX = 666
      locationY = 758
      allowBack = false
      allowFinish = true
      allowPause = true
      connector = {
        targetReference = "get_main_content_document"
      }
      fields = [
        {
          name = "property_picture"
          extensionName = "forceContent:fileUpload"
          fieldType = "ComponentInstance"
          inputParameters = [
            {
              name = "label"
              value = {
                stringValue = "Upload Picture"
              }
            },
            {
              name = "accept"
              value = {
                stringValue = ".jpg,.png,.gif"
              }
            },
            {
              name = "recordId"
              value = {
                elementReference = "create_property"
              }
            },
            {
              name = "multiple"
              value = {
                booleanValue = true
              }
            },
          ]
          inputsOnNextNavToAssocScrn = "UseStoredValues"
          isRequired = true
          storeOutputAutomatically = true
        },
      ]
      showFooter = true
      showHeader = true
    },
  ]
  start = {
    locationX = 540
    locationY = 0
    connector = {
      targetReference = "new_property"
    }
  }
  status = "Active"
  _generated_dependencies = [
    {
      reference = salesforce.Broker__c
    },
  ]
}
